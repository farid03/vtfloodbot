version: "3.7"

name: vtfloodbot-compose

services:
  vtflood-postgres:
    image: postgres:16
    container_name: vtflood-postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5
    ports:
      - "$DB_PORT:$DB_PORT"
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - data:/var/lib/postgresql/data  
  
  application:
    build:
      context: ..
      dockerfile: fp-lab4/Dockerfile
    container_name: vtfloodbot-application
    depends_on:
      vtflood-postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_CONNECTION_STRING: "Server=$DB_HOST;Port=$DB_PORT;Database=$DB_NAME;User Id=$DB_USER;Password=$DB_PASSWORD;"
    profiles: [ "application" ]
    volumes:
      - ../fp-lab4/config.yaml:/config.yaml

volumes:
  data: {}